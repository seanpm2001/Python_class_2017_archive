Project 2: PONG
Students will implement a well-written and engineered version of the classic arcade game PONG.
Overview
In 1972, when video games were still very new and relatively unknown, a new game took the world by storm. A simple simulation of tennis using two-dimensional graphics, minimal sounds, and extremely basic controls, Pong became the first arcade game to achieve widespread popularity and is credited as the genesis of the modern video game industry. Today, the game has been played, remade, spun-off, and referenced innumerable times and it remains, to many, the single most identifiable and recognizable game in the history of video games.
Details
1. Behavior
   1. Gameplay 
Pong is played by two players each controlling a paddle with the goal of defending their end of the "field." A ball begins play in the middle of the screen and, at the start of each round, moves in a random direction. The ball bounces off the upper and lower edges of the field and the players' paddles. Each time the ball bounces off a paddle, its speed increases by a small amount. When the ball bounces off a paddle, its direction is reversed with a small random variation to add unpredictability to the game.


   1. Scoring 
If the ball touches the left or right edge of the field, a point is scored for the opponent of the player who was defending that edge and the ball resets to the middle of the field. When one player reaches 5 points, the game is over and that player is the winner. The winner is announced on the screen and the players are given the opportunity to start a new game.


      1. Player Control 
Paddles are positioned a short distance away from the side they are defending, and can only move up and down, not side to side. Each player should have two keys to control the movement of their paddle: one for up, and one for down. Paddles move at a set speed that is the same for both players can cannot be controlled. The player on the left will control his/her paddle with the 'w' and 's' keys. The player on the right will use the up arrow and down arrow keys.  
         1. Required Checkpoints
         1. Checkpoint 1: Players can control paddles; the ball starts in the middle, moves in a random direction, and bounces; planning sheet started.


         1. Checkpoint 2:The ball speeds up when it hits a paddle, and resets to the middle when it hits the left or right edge; any variables/sprites created so far are well-named.


         1. Checkpoint 3:Final due date: A point is scored when the ball hits the edge on the opponent's side of the field; the game ends when one player reaches five points; players can start a new game after the game ends


         1. Due Dates
Project specification available:
	Tuesday, November 7 2017
	Checkpoint 1:
	Monday, November 13 2017
	Checkpoint 2:
	Friday, November 17 2017
	Checkpoint 3 (Final submission):
	Wednesday, November 22 2017
	Grading Scheme/Rubric
Functional Correctness
	

	Players can control paddles with required keys
	2 points
	Ball begins play at middle of field at start of game and after each point
	3 points
	Ball bounces correctly off each screen edge
	2 points
	Ball bounces correctly off each paddle edge
	2 points
	Ball increases in speed each time it bounces off a paddle
	3 points
	A point is scored for the opponent each time the ball touches the left or right edge
	3 points
	Game ends when one player reaches five points
	2 points
	Winning player is shown when game ends
	2 points
	Players can begin a new game
	2 points
	Functional Correctness Total:
	21 points
	Technical Correctness
	

	Gameplay is smooth, polished, and intuitive
	6 points
	Program shows good creativity and effort
	3 points
	Planning sheet completed and corresponds to final implementation (with updates made during implementation)
	5 points
	Program is well-documented and exhibits good style (e.g. use of SNAP comments, cleanup of redundant blocks/scripts, sensible sprite names, …)
	3 points
	Every variable used has a sensible name that makes the purpose of the variable clear and increases the readability of scripts that use the variable
	5 points
	Checkpoint 1
	5 points
	Checkpoint 2
	5 points
	Technical Correctness Total:
	32 points
	Extra credit for optional features:
	(12 points)
	Project Total:
	53 points
	

Extra credit options:
A maximum of 12 points of extra credit are available.  To earn extra credit, do one/all of the following.  Be sure to describe your work towards extra credit in your planning worksheet.
         * Add sound (e.g. background music, sound effects)
         * Display on screen scores in a visually spectacular way
         * Make the ball bounce differently depending on which portion of the paddle it bounces off (divide the paddle into 8 segments)
         * Any other appropriate expansion approved by a teacher
 Kamchatka:Users:benwatsky:Desktop:cc license.png